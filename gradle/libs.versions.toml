[versions]
kotlin = "1.9.22"
ksp = "1.9.22-1.0.17"
docker = "9.4.0"
diffplug = "3.44.0"
shadow = "8.1.1"
groovy = "3.0.20"
spock = "2.3-groovy-3.0"
oraclelinux = "9"
graalvmPlugin = "0.10.1"
mockserver = "5.15.0"
log4j2 = 2.22.1
jetbrains-annotations = "24.1.0"
tomlj = "1.1.1"

micronaut-platform = "4.3.3" # This is the platform version, used in our tests
micronaut-aot = "2.2.0"
micronaut-testresources = "2.3.3"
micronaut-openapi = "6.6.2"

[libraries]
# Core
micronaut-platform = { module = 'io.micronaut.platform:micronaut-platform', version.ref = 'micronaut-platform' }

dockerPlug = { module = "com.bmuschko:gradle-docker-plugin", version.ref = "docker" }
diffplugPlugin = { module = "com.diffplug.gradle:goomph", version.ref = "diffplug" }
shadowPlugin = { module = "com.github.johnrengelman:shadow", version.ref = "shadow" }
graalvmPlugin = { module = "org.graalvm.buildtools:native-gradle-plugin", version.ref = "graalvmPlugin" }

kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }

groovy-core = { module = "org.codehaus.groovy:groovy", version.ref = "groovy" }
spock-core = { module = "org.spockframework:spock-core", version.ref = "spock" }
spock-junit4 = { module = "org.spockframework:spock-junit4", version.ref = "spock" }
log4j2-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j2" }

micronaut-aot-api = { module = "io.micronaut.aot:micronaut-aot-api", version.ref = "micronaut-aot" }
micronaut-aot-core = { module = "io.micronaut.aot:micronaut-aot-core", version.ref = "micronaut-aot" }
micronaut-aot-std = { module = "io.micronaut.aot:micronaut-aot-std-optimizers", version.ref = "micronaut-aot" }
micronaut-aot-cli = { module = "io.micronaut.aot:micronaut-aot-cli", version.ref = "micronaut-aot" }

micronaut-openapi-generator = { module = "io.micronaut.openapi:micronaut-openapi-generator", version.ref = "micronaut-openapi" }

micronaut-testresources = { module = "io.micronaut.testresources:micronaut-test-resources-build-tools", version.ref = "micronaut-testresources" }

mockserver-netty = { module = "org.mock-server:mockserver-netty", version.ref = "mockserver" }
mockserver-client = { module = "org.mock-server:mockserver-client-java", version.ref = "mockserver" }

jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }
tomlj = { module = "org.tomlj:tomlj", version.ref = "tomlj" }

[bundles]
optionalPlugins = ["kotlin-allopen", "kotlin-gradlePlugin", "graalvmPlugin", "ksp-gradlePlugin"]
