[versions]
kotlin = "1.8.20"
ksp = "1.8.20-1.0.10"
docker = "9.3.1"
diffplug = "3.41.1"
shadow = "7.1.2"
groovy = "3.0.16"
spock = "2.1-groovy-3.0"
graalvmPlugin = "0.9.20"
micronaut = "4.0.0-SNAPSHOT"
micronaut-aot = "2.0.0-M1"
micronaut-testresources = "2.0.0-SNAPSHOT"
log4j2 = { require = "2.17.1", reject = ["]0, 2.17["] }
jetbrains-annotations = "23.1.0"

[libraries]
dockerPlug = { module = "com.bmuschko:gradle-docker-plugin", version.ref = "docker" }
diffplugPlugin = { module = "com.diffplug.gradle:goomph", version.ref = "diffplug" }
shadowPlugin = { module = "gradle.plugin.com.github.johnrengelman:shadow", version.ref = "shadow" }
graalvmPlugin = { module = "org.graalvm.buildtools:native-gradle-plugin", version.ref = "graalvmPlugin" }

kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }

groovy-core = { module = "org.codehaus.groovy:groovy", version.ref = "groovy" }
spock-core = { module = "org.spockframework:spock-core", version.ref = "spock" }
spock-junit4 = { module = "org.spockframework:spock-junit4", version.ref = "spock" }
log4j2-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j2" }

micronaut-aot-api = { module = "io.micronaut.aot:micronaut-aot-api", version.ref = "micronaut-aot" }
micronaut-aot-core = { module = "io.micronaut.aot:micronaut-aot-core", version.ref = "micronaut-aot" }
micronaut-aot-std = { module = "io.micronaut.aot:micronaut-aot-std-optimizers", version.ref = "micronaut-aot" }
micronaut-aot-cli = { module = "io.micronaut.aot:micronaut-aot-cli", version.ref = "micronaut-aot" }

micronaut-testresources = { module = "io.micronaut.testresources:micronaut-test-resources-build-tools", version.ref = "micronaut-testresources" }

jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }

[bundles]
optionalPlugins = [ "kotlin-allopen", "kotlin-gradlePlugin", "graalvmPlugin", "ksp-gradlePlugin" ]
