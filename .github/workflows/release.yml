name: Release
on:
  release:
    types: [published]
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: Set the current release version
        id: release_version
        run: echo ::set-output name=release_version::${GITHUB_REF:11}
      - name: Run pre-release
        uses: micronaut-projects/github-actions/pre-release@master
        env:
          MICRONAUT_BUILD_EMAIL: ${{ secrets.MICRONAUT_BUILD_EMAIL }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to Gradle Plugin Portal
        env:
          PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
        run: ./gradlew -Pgradle.publish.key="$PUBLISH_KEY" -Pgradle.publish.secret="$PUBLISH_SECRET" publishPlugins
      - name: Run post-release
        if: success()
        uses: micronaut-projects/github-actions/post-release@master
        env:
          MICRONAUT_BUILD_EMAIL: ${{ secrets.MICRONAUT_BUILD_EMAIL }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to Github Pages
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@master
        env:
          BETA: ${{ contains(steps.release_version.outputs.release_version, 'M') || contains(steps.release_version.outputs.release_version, 'RC') }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build/docs
          VERSION: ${{ steps.release_version.outputs.release_version }}
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: Run post-release
        if: success()
        uses: micronaut-projects/github-actions/post-release@master
        env:
          MICRONAUT_BUILD_EMAIL: ${{ secrets.MICRONAUT_BUILD_EMAIL }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
