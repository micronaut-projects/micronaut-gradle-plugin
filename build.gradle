// First, apply the publishing plugin
plugins {
    id "idea"
    id "com.gradle.plugin-publish" version "0.16.0"
    id "java-gradle-plugin"
    id "maven-publish"
    id "groovy"
    id "com.adarshr.test-logger"
    id "io.micronaut.internal.build.documented"
}

// If your plugin has any external java dependencies, Gradle will attempt to
// download them from JCenter for anyone using the plugins DSL
// so you should probably use JCenter for dependency resolution in your own
// project.
repositories {
    mavenCentral()
    gradlePluginPortal()
}

// Unless overridden in the pluginBundle config DSL, the project version will
// be used as your plugin version when publishing
version = projectVersion
group = "io.micronaut.gradle"

// Use java-gradle-plugin to generate plugin descriptors and specify plugin ids
gradlePlugin {
    plugins {
        libraryPlugin {
            id = 'io.micronaut.library'
            implementationClass = 'io.micronaut.gradle.MicronautLibraryPlugin'
        }
        applicationPlugin {
            id = 'io.micronaut.application'
            implementationClass = 'io.micronaut.gradle.MicronautApplicationPlugin'
        }
        graalPlugin {
            id = 'io.micronaut.graalvm'
            implementationClass = 'io.micronaut.gradle.graalvm.MicronautGraalPlugin'
        }
        aotPlugin {
            id = 'io.micronaut.aot'
            implementationClass = 'io.micronaut.gradle.aot.MicronautAotPlugin'
        }
    }
}
configurations {
    optionalPluginDependencies
}
tasks.withType(PluginUnderTestMetadata) {
    pluginClasspath.from(configurations.optionalPluginDependencies)
}

dependencies {
    implementation libs.dockerPlug
    implementation libs.diffplugPlug
    implementation libs.shadowPlug
    implementation libs.graalvmPlug
    implementation libs.micronaut.aot.api
    implementation libs.micronaut.aot.core
    implementation libs.micronaut.aot.std
    implementation libs.micronaut.aot.cli
    compileOnly libs.bundles.optionalPlugins

    optionalPluginDependencies libs.bundles.optionalPlugins

    testImplementation libs.bundles.optionalPlugins
    testImplementation libs.groovy.core
    testImplementation libs.spock.core
    testImplementation libs.spock.junit4
}

test {
    useJUnitPlatform()
}
// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
    website = 'https://micronaut.io/'
    vcsUrl = 'https://github.com/micronaut-projects/micronaut-gradle-plugins'
    description = 'Gradle Plugins for Micronaut'
    tags = ['micronaut']

    plugins {
        libraryPlugin {
            displayName = 'Micronaut Library Plugin'
        }
        applicationPlugin {
            displayName = 'Micronaut Application Plugin'
        }
        graalPlugin {
            displayName = 'Micronaut GraalVM Plugin'
        }
        aotPlugin {
            displayName = 'Micronaut AOT Plugin'
        }
    }
}

java {
    toolchain {
      languageVersion.set(JavaLanguageVersion.of(8))
    }
}

tasks.withType(Test).configureEach {
    javaLauncher.set(javaToolchains.launcherFor {
        languageVersion.set(JavaLanguageVersion.of(11))
    })
    inputs.property("GRAALVM_HOME", providers.environmentVariable('GRAALVM_HOME').forUseAtConfigurationTime().getOrElse(""))
}

idea.module {
    downloadJavadoc = true
    downloadSources = true
}

['dependencyUpdates', 'publishToSonatype', 'useLatestVersions'].each { name ->
    tasks.register(name) {
        description = "Placeholder task for compatibility with other Micronaut builds"
    }
}
